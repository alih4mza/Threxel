2025-05-14 00:34:07,650 - WARNING - GeoIP database not found, location services will be limited
2025-05-14 00:34:07,652 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 00:34:07,653 - INFO - User: onetw
2025-05-14 00:34:07,654 - INFO - OS: Windows
2025-05-14 00:34:07,655 - INFO - Server: http://localhost:5000/log
2025-05-14 00:34:11,484 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:34:16,346 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353E23E00>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:34:22,435 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355000B90>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:34:30,521 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355000190>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:34:42,592 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EFC8A0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:35:02,670 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EFC9D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:35:06,730 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353F6C950>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:35:06,731 - WARNING - Failed to send data
2025-05-14 00:35:10,844 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:35:15,547 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355013680>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:35:21,584 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550138A0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:35:29,673 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550139B0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:35:41,780 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355013570>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:36:01,851 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355013CE0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:36:05,934 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355013F00>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:36:05,935 - WARNING - Failed to send data
2025-05-14 00:36:11,077 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:36:15,759 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353DD3CE0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:36:21,813 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEA030>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:36:29,910 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EE9E10>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:36:42,036 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EE9BF0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:37:02,104 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EE99D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:37:06,169 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EE97B0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:37:06,169 - WARNING - Failed to send data
2025-05-14 00:37:11,438 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:37:16,268 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEB130>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:37:22,404 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEACF0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:37:30,461 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEAAD0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:37:42,505 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEA8B0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:38:02,585 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEA360>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:38:06,661 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EE8490>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:38:06,662 - WARNING - Failed to send data
2025-05-14 00:38:10,791 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:38:15,606 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011F20>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:38:21,703 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011D00>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:38:29,792 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011AE0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:38:41,852 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550118C0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:39:01,930 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550116A0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:39:05,992 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011480>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:39:05,993 - WARNING - Failed to send data
2025-05-14 00:39:10,824 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:39:15,578 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EE8490>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:39:21,625 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEA360>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:39:29,720 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEAAD0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:39:41,779 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEB130>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:40:01,862 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EEAE00>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:40:05,945 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353EE8D10>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:40:05,946 - WARNING - Failed to send data
2025-05-14 00:40:10,796 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:40:15,503 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011590>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:40:21,586 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011BF0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:40:29,660 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550119D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:40:41,737 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011370>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:41:01,803 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550118C0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:41:05,855 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011D00>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:41:05,856 - WARNING - Failed to send data
2025-05-14 00:41:11,170 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:41:16,035 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022353DD3CE0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:41:22,116 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355010160>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:41:30,207 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355010380>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:41:42,320 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550106B0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:42:02,387 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550108D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:42:06,503 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355010AF0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:42:06,504 - WARNING - Failed to send data
2025-05-14 00:42:10,842 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:42:15,729 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355012140>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:42:21,836 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355012360>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:42:29,981 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355012580>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:42:42,097 - WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550127A0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:43:02,204 - WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550129C0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:43:06,280 - ERROR - Server communication error: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355012BE0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))
2025-05-14 00:43:06,281 - WARNING - Failed to send data
2025-05-14 00:43:10,972 - ERROR - Log collection error: (1314, 'OpenEventLogW', 'A required privilege is not held by the client.')
2025-05-14 00:43:15,721 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355012030>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:43:21,814 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000022355011480>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:43:29,930 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000223550116A0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 00:45:51,184 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 00:45:51,185 - INFO - User: onetw
2025-05-14 00:45:51,186 - INFO - OS: Windows
2025-05-14 00:45:51,186 - INFO - Server: http://localhost:5000/log
2025-05-14 00:45:57,563 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "VUQHMg09iq7DSKvaM2jT";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1654234542496">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654234541696">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654234541856">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1654234542976">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1654234542656">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1654234543136">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1654234543296">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1654234543456">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-1654234542016">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-1654234542176">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-1654234543776">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:45:57,581 - WARNING - Failed to send data
2025-05-14 00:46:57,532 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "VUQHMg09iq7DSKvaM2jT";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1654236855520">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236842720">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236842880">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1654236843040">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1654236843200">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1654234539456">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1654234541216">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1654234545856">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-1654234545376">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-1654234545536">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-1654236316832">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:47:00,643 - WARNING - Failed to send data
2025-05-14 00:47:57,293 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "VUQHMg09iq7DSKvaM2jT";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1654236854080">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236325632">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236325952">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1654236324512">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1654236323712">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1654236323872">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1654236324032">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1654236324192">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-1654236325152">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-1654236326112">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-1654236326752">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:47:57,302 - WARNING - Failed to send data
2025-05-14 00:48:57,824 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "VUQHMg09iq7DSKvaM2jT";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1654236325792">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236326592">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236318912">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1654236318592">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1654236318272">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1654236318112">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1654236318432">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1654236315712">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-1654236327072">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-1654236327232">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-1654236327392">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:48:57,842 - WARNING - Failed to send data
2025-05-14 00:49:57,228 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "VUQHMg09iq7DSKvaM2jT";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1654236319072">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236329312">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236329472">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1654236329632">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1654236329792">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1654236329952">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1654236330112">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1654236330272">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-1654236330592">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-1654236330752">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-1654236330912">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:49:57,239 - WARNING - Failed to send data
2025-05-14 00:50:57,113 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "VUQHMg09iq7DSKvaM2jT";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1654236329152">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236398432">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1654236398592">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1654236398752">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1654236398912">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1654236399072">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1654236399232">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1654236399392">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-1654236399712">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-1654236399872">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-1654236400032">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:50:57,124 - WARNING - Failed to send data
2025-05-14 00:51:57,231 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "5kq01UtrQjwrkQ9Fu0tK";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2768931647904">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2768931647104">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2768931647264">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2768931648384">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2768931648064">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2768931648544">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2768931648704">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2768931648864">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-2768931647424">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-2768931647584">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-2768931649184">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:51:57,244 - WARNING - Failed to send data
2025-05-14 00:52:57,410 - ERROR - Server response: 500 - <!doctype html>
<html lang=en>
  <head>
    <title>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "5kq01UtrQjwrkQ9Fu0tK";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NotImplementedError</h1>
<div class="detail">
  <p class="errormsg">NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2768931646624">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2768931646464">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py"</cite>,
      line <em class="line">183</em>,
      in <code class="function">__call__</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>self.x_prefix, environ_get(&#34;HTTP_X_FORWARDED_PREFIX&#34;)</pre>
<pre class="line before"><span class="ws">        </span>)</pre>
<pre class="line before"><span class="ws">        </span>if x_prefix:</pre>
<pre class="line before"><span class="ws">            </span>environ[&#34;SCRIPT_NAME&#34;] = x_prefix</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>return self.app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2768934175584">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2768934175744">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2768934175904">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2768934176064">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2768934176224">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2768934176384">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py"</cite>,
      line <em class="line">174</em>,
      in <code class="function">decorated</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                        </span>except TypeError:</pre>
<pre class="line before"><span class="ws">                            </span>return self.auth_error_callback()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>g.flask_httpauth_user = user if user is not True \</pre>
<pre class="line before"><span class="ws">                        </span>else auth.username if auth else None</pre>
<pre class="line current"><span class="ws">                </span>return self.ensure_sync(f)(*args, **kwargs)
<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>return decorated</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if f:</pre>
<pre class="line after"><span class="ws">            </span>return login_required_internal(f)</pre>
<pre class="line after"><span class="ws">        </span>return login_required_internal</pre></div>
</div>

<li><div class="frame" id="frame-2768934176704">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py"</cite>,
      line <em class="line">1314</em>,
      in <code class="function">__inner</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">                    </span>self.limiter._check_request_limit(</pre>
<pre class="line before"><span class="ws">                        </span>in_middleware=False, callable_name=name</pre>
<pre class="line before"><span class="ws">                    </span>)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">                </span>return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
<span class="ws">                </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span># mark this wrapper as wrapped by a decorator from the limiter</pre>
<pre class="line after"><span class="ws">            </span># from which the decorator was created. This ensures that stacked</pre>
<pre class="line after"><span class="ws">            </span># decorations only trigger rate limiting from the inner most</pre>
<pre class="line after"><span class="ws">            </span># decorator from each limiter instance (the weird need for</pre></div>
</div>

<li><div class="frame" id="frame-2768934176864">
  <h4>File <cite class="filename">"C:\Users\onetw\Desktop\Final year project\Server.py"</cite>,
      line <em class="line">82</em>,
      in <code class="function">receive_log</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>@app.route(&#39;/log&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line before"><span class="ws"></span>@auth.login_required</pre>
<pre class="line before"><span class="ws"></span>@limiter.limit(&#34;10 per minute&#34;)</pre>
<pre class="line before"><span class="ws"></span>def receive_log():</pre>
<pre class="line current"><span class="ws">    </span>if not logs_collection or not agents_collection:
<span class="ws">    </span>       ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({&#34;status&#34;: &#34;error&#34;, &#34;message&#34;: &#34;Database not available&#34;}), 500</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>try:</pre>
<pre class="line after"><span class="ws">        </span>data = request.get_json()</pre>
<pre class="line after"><span class="ws">        </span>if not data:</pre></div>
</div>

<li><div class="frame" id="frame-2768934177024">
  <h4>File <cite class="filename">"C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py"</cite>,
      line <em class="line">311</em>,
      in <code class="function">__bool__</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __hash__(self) -&gt; int:</pre>
<pre class="line before"><span class="ws">        </span>return hash((self._database, self._name))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __bool__(self) -&gt; NoReturn:</pre>
<pre class="line current"><span class="ws">        </span>raise NotImplementedError(
<span class="ws">        </span>^</pre>
<pre class="line after"><span class="ws">            </span>f&#34;{type(self).__name__} objects do not implement truth &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;value testing or bool(). Please compare &#34;</pre>
<pre class="line after"><span class="ws">            </span>&#34;with None instead: collection is not None&#34;</pre>
<pre class="line after"><span class="ws">        </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py&#34;, line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py&#34;, line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py&#34;, line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File &#34;C:\Users\onetw\Desktop\Final year project\Server.py&#34;, line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File &#34;C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py&#34;, line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\werkzeug\middleware\proxy_fix.py", line 183, in __call__
    return self.app(environ, start_response)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_httpauth.py", line 174, in decorated
    return self.ensure_sync(f)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\flask_limiter\extension.py", line 1314, in __inner
    return cast(R, flask.current_app.ensure_sync(obj)(*a, **k))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\onetw\Desktop\Final year project\Server.py", line 82, in receive_log
    if not logs_collection or not agents_collection:
           ^^^^^^^^^^^^^^^
  File "C:\Users\onetw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\LocalCache\local-packages\Python313\site-packages\pymongo\synchronous\collection.py", line 311, in __bool__
    raise NotImplementedError(
    ^
NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None


-->

2025-05-14 00:52:57,422 - WARNING - Failed to send data
2025-05-14 00:53:11,576 - INFO - 
Agent stopped by user
2025-05-14 00:53:54,952 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 00:53:54,952 - INFO - User: onetw
2025-05-14 00:53:54,954 - INFO - OS: Windows
2025-05-14 00:53:54,955 - INFO - Server: http://localhost:5000/log
2025-05-14 00:54:01,404 - INFO - Data sent successfully in 6.45s
2025-05-14 00:54:33,860 - INFO - 
Agent stopped by user
2025-05-14 00:58:39,219 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 00:58:39,219 - INFO - User: onetw
2025-05-14 00:58:39,221 - INFO - OS: Windows
2025-05-14 00:58:39,221 - INFO - Server: http://localhost:5000/log
2025-05-14 00:58:45,396 - INFO - Data sent successfully in 6.17s
2025-05-14 00:59:45,390 - INFO - Data sent successfully in 6.17s
2025-05-14 01:00:45,273 - INFO - Data sent successfully in 6.05s
2025-05-14 01:01:45,445 - INFO - Data sent successfully in 6.22s
2025-05-14 01:02:45,386 - INFO - Data sent successfully in 6.16s
2025-05-14 01:03:45,501 - INFO - Data sent successfully in 6.28s
2025-05-14 01:04:45,259 - INFO - Data sent successfully in 6.03s
2025-05-14 01:05:45,496 - INFO - Data sent successfully in 6.27s
2025-05-14 01:06:45,393 - INFO - Data sent successfully in 6.17s
2025-05-14 01:07:45,086 - INFO - Data sent successfully in 5.86s
2025-05-14 01:08:45,236 - INFO - Data sent successfully in 6.01s
2025-05-14 01:09:45,419 - INFO - Data sent successfully in 6.19s
2025-05-14 01:10:45,507 - INFO - Data sent successfully in 6.28s
2025-05-14 01:10:51,840 - INFO - 
Agent stopped by user
2025-05-14 01:11:13,250 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 01:11:13,251 - INFO - User: onetw
2025-05-14 01:11:13,253 - INFO - OS: Windows
2025-05-14 01:11:13,253 - INFO - Server: http://localhost:5000/log
2025-05-14 01:11:19,332 - INFO - Data sent successfully in 6.08s
2025-05-14 01:12:19,305 - INFO - Data sent successfully in 6.05s
2025-05-14 01:13:19,237 - INFO - Data sent successfully in 5.98s
2025-05-14 01:14:19,650 - INFO - Data sent successfully in 6.39s
2025-05-14 01:15:19,286 - INFO - Data sent successfully in 6.03s
2025-05-14 01:16:19,359 - INFO - Data sent successfully in 6.10s
2025-05-14 01:17:19,232 - INFO - Data sent successfully in 5.97s
2025-05-14 01:18:19,497 - INFO - Data sent successfully in 6.24s
2025-05-14 01:19:19,492 - INFO - Data sent successfully in 6.23s
2025-05-14 01:20:19,522 - INFO - Data sent successfully in 6.26s
2025-05-14 01:21:19,480 - INFO - Data sent successfully in 6.22s
2025-05-14 01:22:19,496 - INFO - Data sent successfully in 6.24s
2025-05-14 01:23:19,216 - INFO - Data sent successfully in 5.96s
2025-05-14 01:24:19,436 - INFO - Data sent successfully in 6.17s
2025-05-14 01:25:19,439 - INFO - Data sent successfully in 6.18s
2025-05-14 01:26:19,349 - INFO - Data sent successfully in 6.09s
2025-05-14 01:27:21,067 - INFO - Data sent successfully in 7.80s
2025-05-14 01:28:19,390 - INFO - Data sent successfully in 6.13s
2025-05-14 01:29:19,439 - INFO - Data sent successfully in 6.18s
2025-05-14 01:29:47,063 - INFO - 
Agent stopped by user
2025-05-14 01:30:28,614 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 01:30:28,615 - INFO - User: onetw
2025-05-14 01:30:28,616 - INFO - OS: Windows
2025-05-14 01:30:28,617 - INFO - Server: http://localhost:5000/log
2025-05-14 01:30:34,712 - INFO - Data sent successfully in 6.09s
2025-05-14 01:31:34,707 - INFO - Data sent successfully in 6.09s
2025-05-14 01:32:34,751 - INFO - Data sent successfully in 6.13s
2025-05-14 01:33:34,351 - INFO - Data sent successfully in 5.73s
2025-05-14 01:34:34,738 - INFO - Data sent successfully in 6.12s
2025-05-14 01:35:34,859 - INFO - Data sent successfully in 6.24s
2025-05-14 01:36:34,879 - INFO - Data sent successfully in 6.26s
2025-05-14 01:37:34,763 - INFO - Data sent successfully in 6.14s
2025-05-14 01:38:34,440 - INFO - Data sent successfully in 5.82s
2025-05-14 01:39:34,626 - INFO - Data sent successfully in 6.00s
2025-05-14 01:40:34,596 - INFO - Data sent successfully in 5.97s
2025-05-14 01:41:34,813 - INFO - Data sent successfully in 6.19s
2025-05-14 01:42:34,832 - INFO - Data sent successfully in 6.21s
2025-05-14 01:42:43,797 - INFO - 
Agent stopped by user
2025-05-14 01:49:02,975 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 01:49:02,976 - INFO - User: onetw
2025-05-14 01:49:02,978 - INFO - OS: Windows
2025-05-14 01:49:02,979 - INFO - Server: http://localhost:5000/log
2025-05-14 01:49:09,145 - INFO - Data sent successfully in 6.17s
2025-05-14 01:50:09,185 - INFO - Data sent successfully in 6.21s
2025-05-14 01:51:09,195 - INFO - Data sent successfully in 6.22s
2025-05-14 01:52:09,095 - INFO - Data sent successfully in 6.11s
2025-05-14 01:53:09,105 - INFO - Data sent successfully in 6.12s
2025-05-14 01:54:08,864 - INFO - Data sent successfully in 5.88s
2025-05-14 01:55:11,171 - WARNING - Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000290C1E934D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 01:55:17,240 - WARNING - Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000290C1EB5D10>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 01:55:25,312 - WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x00000290C1EB6850>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /log
2025-05-14 01:55:32,883 - INFO - 
Agent stopped by user
2025-05-14 02:10:43,146 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 02:10:43,148 - INFO - User: onetw
2025-05-14 02:10:43,148 - INFO - OS: Windows
2025-05-14 02:10:43,149 - INFO - Server: http://localhost:5000/log
2025-05-14 02:10:49,215 - INFO - Data sent successfully in 6.06s
2025-05-14 02:11:49,069 - INFO - Data sent successfully in 5.92s
2025-05-14 02:12:04,576 - INFO - 
Agent stopped by user
2025-05-14 02:15:43,734 - INFO - Starting agent agent1 v1.2.1 on Ali
2025-05-14 02:15:43,735 - INFO - User: onetw
2025-05-14 02:15:43,736 - INFO - OS: Windows
2025-05-14 02:15:43,736 - INFO - Server: http://localhost:5000/log
2025-05-14 02:15:50,330 - INFO - Data sent successfully in 6.59s
2025-05-14 02:16:49,729 - INFO - Data sent successfully in 5.99s
2025-05-14 02:17:50,192 - INFO - Data sent successfully in 6.45s
2025-05-14 02:18:49,537 - INFO - Data sent successfully in 5.80s
2025-05-14 02:19:49,618 - INFO - Data sent successfully in 5.88s
2025-05-14 02:20:50,151 - INFO - Data sent successfully in 6.41s
2025-05-14 02:21:49,760 - INFO - Data sent successfully in 6.02s
2025-05-14 02:22:49,478 - INFO - Data sent successfully in 5.74s
2025-05-14 02:23:49,499 - INFO - Data sent successfully in 5.76s
2025-05-14 02:24:49,560 - INFO - Data sent successfully in 5.82s
2025-05-14 02:25:49,477 - INFO - Data sent successfully in 5.74s
2025-05-14 02:26:49,571 - INFO - Data sent successfully in 5.83s
2025-05-14 02:28:17,709 - ERROR - Server response error: 500
2025-05-14 02:28:17,709 - WARNING - Failed to send data
2025-05-14 02:28:29,149 - INFO - 
Agent stopped by user
2025-05-14 02:40:30,811 - INFO - Starting agent agent1 v1.3.0 on Ali
2025-05-14 02:40:30,811 - INFO - User: onetw
2025-05-14 02:40:30,812 - INFO - OS: Windows
2025-05-14 02:40:30,812 - INFO - Server: http://localhost:5000/log
2025-05-14 02:40:30,812 - INFO - Daily data limit: 1GB
2025-05-14 02:40:36,820 - INFO - Data sent successfully in 6.01s
2025-05-14 02:40:36,821 - INFO - Daily data used: 514.13MB
2025-05-14 02:41:36,777 - INFO - Data sent successfully in 5.96s
2025-05-14 02:41:36,778 - INFO - Daily data used: 1028.43MB
2025-05-14 02:42:36,774 - INFO - Data sent successfully in 5.96s
2025-05-14 02:42:36,776 - INFO - Daily data used: 1543.25MB
2025-05-14 02:43:36,719 - INFO - Data sent successfully in 5.90s
2025-05-14 02:43:36,720 - INFO - Daily data used: 2058.15MB
2025-05-14 02:44:36,729 - INFO - Data sent successfully in 5.91s
2025-05-14 02:44:36,731 - INFO - Daily data used: 2573.27MB
2025-05-14 02:45:36,791 - INFO - Data sent successfully in 5.98s
2025-05-14 02:45:36,792 - INFO - Daily data used: 3088.74MB
2025-05-14 02:46:36,710 - INFO - Data sent successfully in 5.89s
2025-05-14 02:46:36,711 - INFO - Daily data used: 3604.41MB
2025-05-14 02:47:36,732 - INFO - Data sent successfully in 5.92s
2025-05-14 02:47:36,733 - INFO - Daily data used: 4120.27MB
2025-05-14 02:48:36,923 - INFO - Data sent successfully in 6.11s
2025-05-14 02:48:36,923 - INFO - Daily data used: 4636.43MB
2025-05-14 02:49:36,670 - INFO - Data sent successfully in 5.85s
2025-05-14 02:49:36,670 - INFO - Daily data used: 5152.83MB
2025-05-14 02:50:37,004 - INFO - Data sent successfully in 6.19s
2025-05-14 02:50:37,004 - INFO - Daily data used: 5669.34MB
2025-05-14 02:51:36,764 - INFO - Data sent successfully in 5.95s
2025-05-14 02:51:36,765 - INFO - Daily data used: 6186.36MB
2025-05-14 02:52:36,720 - INFO - Data sent successfully in 5.90s
2025-05-14 02:52:36,721 - INFO - Daily data used: 6703.63MB
2025-05-14 02:53:36,694 - INFO - Data sent successfully in 5.87s
2025-05-14 02:53:36,696 - INFO - Daily data used: 7221.17MB
2025-05-14 02:54:36,686 - INFO - Data sent successfully in 5.87s
2025-05-14 02:54:36,689 - INFO - Daily data used: 7738.84MB
2025-05-14 02:55:36,548 - INFO - Data sent successfully in 5.73s
2025-05-14 02:55:36,549 - INFO - Daily data used: 8257.2MB
2025-05-14 02:56:36,655 - INFO - Data sent successfully in 5.83s
2025-05-14 02:56:36,656 - INFO - Daily data used: 8776.62MB
2025-05-14 02:56:51,318 - INFO - 
Agent stopped by user
2025-05-14 03:00:13,741 - INFO - Starting agent agent1 v1.3.0 on Ali
2025-05-14 03:00:13,742 - INFO - User: onetw
2025-05-14 03:00:13,742 - INFO - OS: Windows
2025-05-14 03:00:13,743 - INFO - Server: http://localhost:5000/log
2025-05-14 03:00:13,743 - INFO - Daily data limit: 1GB
2025-05-14 03:00:20,118 - INFO - Data sent successfully in 6.37s
2025-05-14 03:00:20,119 - INFO - Daily data used: 520.57MB
2025-05-14 03:01:13,556 - INFO - 
Agent stopped by user
2025-05-14 03:07:12,222 - INFO - Starting agent agent1 v1.3.0 on Ali
2025-05-14 03:07:12,222 - INFO - User: onetw
2025-05-14 03:07:12,223 - INFO - OS: Windows
2025-05-14 03:07:12,224 - INFO - Server: http://localhost:5000/log
2025-05-14 03:07:12,224 - INFO - Daily data limit: 1GB
2025-05-14 03:07:18,915 - INFO - Data sent successfully in 6.69s
2025-05-14 03:07:18,915 - INFO - Daily data used: 524.47MB
2025-05-14 03:08:18,075 - INFO - Data sent successfully in 5.85s
2025-05-14 03:08:18,075 - INFO - Daily data used: 1049.04MB
2025-05-14 03:09:18,045 - INFO - Data sent successfully in 5.82s
2025-05-14 03:09:18,046 - INFO - Daily data used: 1573.76MB
2025-05-14 03:10:17,929 - INFO - Data sent successfully in 5.70s
2025-05-14 03:10:17,929 - INFO - Daily data used: 2098.84MB
2025-05-14 03:11:18,118 - INFO - Data sent successfully in 5.89s
2025-05-14 03:11:18,120 - INFO - Daily data used: 2624.17MB
2025-05-14 03:12:17,935 - INFO - Data sent successfully in 5.71s
2025-05-14 03:12:17,936 - INFO - Daily data used: 3150.06MB
2025-05-14 03:13:18,042 - INFO - Data sent successfully in 5.81s
2025-05-14 03:13:18,042 - INFO - Daily data used: 3677.07MB
2025-05-14 03:14:18,187 - INFO - Data sent successfully in 5.96s
2025-05-14 03:14:18,188 - INFO - Daily data used: 4206.59MB
2025-05-14 03:15:18,072 - INFO - Data sent successfully in 5.84s
2025-05-14 03:15:18,073 - INFO - Daily data used: 4736.38MB
2025-05-14 03:15:27,165 - INFO - 
Agent stopped by user
2025-05-14 11:46:18,739 - INFO - Starting agent agent1 v1.3.0 on Ali
2025-05-14 11:46:18,740 - INFO - User: onetw
2025-05-14 11:46:18,742 - INFO - OS: Windows
2025-05-14 11:46:18,743 - INFO - Server: http://localhost:5000/log
2025-05-14 11:46:18,743 - INFO - Daily data limit: 1GB
2025-05-14 11:46:26,240 - INFO - Data sent successfully in 7.50s
2025-05-14 11:46:26,245 - INFO - Daily data used: 559.86MB
2025-05-14 11:47:25,124 - INFO - Data sent successfully in 6.38s
2025-05-14 11:47:25,126 - INFO - Daily data used: 1124.15MB
2025-05-14 11:48:24,941 - INFO - Data sent successfully in 6.20s
2025-05-14 11:48:24,944 - INFO - Daily data used: 1689.47MB
2025-05-14 11:49:24,893 - INFO - Data sent successfully in 6.15s
2025-05-14 11:49:24,894 - INFO - Daily data used: 2255.03MB
2025-05-14 11:50:21,475 - INFO - 
Agent stopped by user
2025-05-15 01:09:36,892 - INFO - Starting agent agent1 v1.3.0 on Ali
2025-05-15 01:09:36,893 - INFO - User: onetw
2025-05-15 01:09:36,894 - INFO - OS: Windows
2025-05-15 01:09:36,894 - INFO - Server: http://localhost:5000/log
2025-05-15 01:09:36,895 - INFO - Daily data limit: 1GB
2025-05-15 01:09:42,280 - INFO - Data sent successfully in 5.39s
2025-05-15 01:09:42,282 - INFO - Daily data used: 408.51MB
2025-05-15 01:09:47,656 - INFO - Data sent successfully in 5.37s
2025-05-15 01:09:47,657 - INFO - Daily data used: 818.56MB
2025-05-15 01:09:52,919 - INFO - Data sent successfully in 5.26s
2025-05-15 01:09:52,920 - INFO - Daily data used: 1229.97MB
2025-05-15 01:09:58,146 - INFO - Data sent successfully in 5.23s
2025-05-15 01:09:58,147 - INFO - Daily data used: 1642.68MB
2025-05-15 01:10:03,355 - INFO - Data sent successfully in 5.21s
2025-05-15 01:10:03,356 - INFO - Daily data used: 2056.58MB
2025-05-15 01:10:09,112 - INFO - Data sent successfully in 5.75s
2025-05-15 01:10:09,114 - INFO - Daily data used: 2471.72MB
2025-05-15 01:10:14,291 - INFO - Data sent successfully in 5.17s
2025-05-15 01:10:14,293 - INFO - Daily data used: 2887.59MB
2025-05-15 01:10:19,838 - INFO - Data sent successfully in 5.54s
2025-05-15 01:10:19,839 - INFO - Daily data used: 3305.09MB
2025-05-15 01:10:25,020 - INFO - Data sent successfully in 5.18s
2025-05-15 01:10:25,021 - INFO - Daily data used: 3723.11MB
2025-05-15 01:10:30,156 - INFO - Data sent successfully in 5.13s
2025-05-15 01:10:30,157 - INFO - Daily data used: 4141.71MB
2025-05-15 01:10:36,063 - INFO - Data sent successfully in 5.90s
2025-05-15 01:10:36,064 - INFO - Daily data used: 4561.4MB
2025-05-15 01:10:41,760 - INFO - Data sent successfully in 5.69s
2025-05-15 01:10:41,762 - INFO - Daily data used: 4982.49MB
2025-05-15 01:10:47,255 - INFO - Data sent successfully in 5.49s
2025-05-15 01:10:47,256 - INFO - Daily data used: 5405.92MB
2025-05-15 01:10:52,687 - INFO - Data sent successfully in 5.43s
2025-05-15 01:10:52,687 - INFO - Daily data used: 5830.45MB
2025-05-15 01:10:58,159 - INFO - Data sent successfully in 5.47s
2025-05-15 01:10:58,161 - INFO - Daily data used: 6255.55MB
2025-05-15 01:11:03,671 - INFO - Data sent successfully in 5.51s
2025-05-15 01:11:03,673 - INFO - Daily data used: 6680.65MB
2025-05-15 01:11:09,157 - INFO - Data sent successfully in 5.48s
2025-05-15 01:11:09,158 - INFO - Daily data used: 7106.43MB
2025-05-15 01:11:14,998 - INFO - Data sent successfully in 5.84s
2025-05-15 01:11:15,000 - INFO - Daily data used: 7532.73MB
2025-05-15 01:11:20,648 - INFO - Data sent successfully in 5.65s
2025-05-15 01:11:20,649 - INFO - Daily data used: 7959.49MB
2025-05-15 01:11:26,441 - INFO - Data sent successfully in 5.79s
2025-05-15 01:11:26,442 - INFO - Daily data used: 8386.82MB
2025-05-15 01:11:31,833 - INFO - Data sent successfully in 5.39s
2025-05-15 01:11:31,835 - INFO - Daily data used: 8814.99MB
2025-05-15 01:11:37,382 - INFO - Data sent successfully in 5.55s
2025-05-15 01:11:37,382 - INFO - Daily data used: 9244.21MB
2025-05-15 01:11:42,943 - INFO - Data sent successfully in 5.56s
2025-05-15 01:11:42,946 - INFO - Daily data used: 9673.95MB
2025-05-15 01:11:48,572 - INFO - Data sent successfully in 5.62s
2025-05-15 01:11:48,573 - INFO - Daily data used: 10104.12MB
2025-05-15 01:11:54,074 - INFO - Data sent successfully in 5.50s
2025-05-15 01:11:54,076 - INFO - Daily data used: 10535.18MB
2025-05-15 01:11:59,631 - INFO - Data sent successfully in 5.55s
2025-05-15 01:11:59,632 - INFO - Daily data used: 10966.24MB
2025-05-15 01:12:05,218 - INFO - Data sent successfully in 5.58s
2025-05-15 01:12:05,220 - INFO - Daily data used: 11397.94MB
2025-05-15 01:12:10,858 - INFO - Data sent successfully in 5.64s
2025-05-15 01:12:10,859 - INFO - Daily data used: 11830.76MB
2025-05-15 01:12:16,622 - INFO - Data sent successfully in 5.76s
2025-05-15 01:12:16,624 - INFO - Daily data used: 12264.19MB
2025-05-15 01:12:22,391 - INFO - Data sent successfully in 5.77s
2025-05-15 01:12:22,393 - INFO - Daily data used: 12698.49MB
2025-05-15 01:12:28,039 - INFO - Data sent successfully in 5.65s
2025-05-15 01:12:28,040 - INFO - Daily data used: 13133.39MB
2025-05-15 01:12:33,696 - INFO - Data sent successfully in 5.65s
2025-05-15 01:12:33,697 - INFO - Daily data used: 13568.97MB
2025-05-15 01:12:39,233 - INFO - Data sent successfully in 5.53s
2025-05-15 01:12:39,235 - INFO - Daily data used: 14004.99MB
2025-05-15 01:12:45,343 - INFO - Data sent successfully in 6.11s
2025-05-15 01:12:45,346 - INFO - Daily data used: 14441.2MB
2025-05-15 01:12:51,120 - INFO - Data sent successfully in 5.77s
2025-05-15 01:12:51,122 - INFO - Daily data used: 14877.96MB
2025-05-15 01:12:56,586 - INFO - Data sent successfully in 5.46s
2025-05-15 01:12:56,588 - INFO - Daily data used: 15314.74MB
2025-05-15 01:13:02,112 - INFO - Data sent successfully in 5.52s
2025-05-15 01:13:02,116 - INFO - Daily data used: 15751.94MB
2025-05-15 01:13:07,721 - INFO - Data sent successfully in 5.60s
2025-05-15 01:13:07,723 - INFO - Daily data used: 16189.79MB
2025-05-15 01:13:13,256 - INFO - Data sent successfully in 5.53s
2025-05-15 01:13:13,258 - INFO - Daily data used: 16627.86MB
2025-05-15 01:13:21,048 - INFO - 
Agent stopped by user
